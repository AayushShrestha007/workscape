{"ast":null,"code":"import React,{useEffect,useState}from'react';import styled from'styled-components';import{getUserAppliedJobsApi}from'../../../apis/Api';import ApplicantNavbar from'../../../components/ApplicantNavbar';import Loader from'../../../components/Loader';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PageContainer=styled.div`\n  padding: 20px;\n  background-color: white;\n  min-height: calc(100vh - 60px);  // Assuming the navbar is 60px high\n`;const JobsContainer=styled.div`\n  max-width: 1600px;\n  margin: 0 auto;\n  padding: 20px;\n  background: white;\n  border-radius: 8px;\n`;const JobCard=styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 20px;\n  border-bottom: 1px solid #ccc;\n  &:last-child {\n    border-bottom: none;\n  }\n`;const JobHeader=styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;const EmployerImage=styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  object-fit: cover;\n`;const JobDetails=styled.div`\n  margin-left: 20px;\n`;const JobTitle=styled.h2`\n  font-size: 20px;\n  color: #65A168;  // Green color for the job title\n  margin: 0;\n`;const EmployerName=styled.p`\n  font-size: 16px;\n  color: #333;\n  font-weight: bold;\n  margin: 0;\n`;const JobDescription=styled.p`\n  font-size: 16px;\n  color: #666;\n  margin-top: 10px;\n`;const JobStatus=styled.p`\n  font-size: 14px;\n  color: #333;\n  margin-top: 10px;\n  font-weight: bold;\n`;const Title=styled.h1`\n  font-size: 32px;\n  color: #333;\n  text-align: left;\n  margin-bottom: 10px;\n  margin-left: 32px;\n`;// Pagination styles\nconst PaginationContainer=styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;const PageNumber=styled.button`\n  background: none;\n  border: none;\n  padding: 5px 10px;\n  cursor: pointer;\n  color: #333;\n  font-size: 16px;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  &.active {\n    font-weight: bold;\n    text-decoration: underline;\n  }\n`;const AppliedJobsList=()=>{const[appliedJobs,setAppliedJobs]=useState([]);const[currentPage,setCurrentPage]=useState(1);const[applicationsPerPage]=useState(3);const[totalApplications,setTotalApplications]=useState(0);const[loading,setLoading]=useState(true);useEffect(()=>{fetchAppliedJobs(currentPage);},[currentPage]);const fetchAppliedJobs=async page=>{try{setLoading(true);const res=await getUserAppliedJobsApi(page,applicationsPerPage);setAppliedJobs(res.data.applications);setTotalApplications(res.data.totalApplications);setLoading(false);}catch(error){console.log(error);setLoading(false);}};const paginate=pageNumber=>setCurrentPage(pageNumber);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(ApplicantNavbar,{}),/*#__PURE__*/_jsxs(PageContainer,{children:[/*#__PURE__*/_jsx(Title,{children:\"Jobs You've Applied For\"}),loading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(JobsContainer,{children:appliedJobs.length===0?/*#__PURE__*/_jsx(\"p\",{children:\"No jobs applied for yet.\"}):appliedJobs.map(application=>/*#__PURE__*/_jsxs(JobCard,{children:[/*#__PURE__*/_jsxs(JobHeader,{children:[application.job.employer&&/*#__PURE__*/_jsx(EmployerImage,{src:`http://localhost:5500/employerImage/${application.job.employer.employerImage}`,alt:\"Employer\"}),/*#__PURE__*/_jsxs(JobDetails,{children:[/*#__PURE__*/_jsx(JobTitle,{children:application.job.title}),application.job.employer&&/*#__PURE__*/_jsx(EmployerName,{children:application.job.employer.organizationName})]})]}),/*#__PURE__*/_jsx(JobDescription,{children:application.job.description}),/*#__PURE__*/_jsxs(JobStatus,{children:[\"Status: \",application.status]})]},application._id))}),/*#__PURE__*/_jsx(PaginationContainer,{children:[...Array(Math.ceil(totalApplications/applicationsPerPage)).keys()].map(number=>/*#__PURE__*/_jsx(PageNumber,{onClick:()=>paginate(number+1),className:currentPage===number+1?'active':'',children:number+1},number+1))})]})]})]});};export default AppliedJobsList;","map":{"version":3,"names":["React","useEffect","useState","styled","getUserAppliedJobsApi","ApplicantNavbar","Loader","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PageContainer","div","JobsContainer","JobCard","JobHeader","EmployerImage","img","JobDetails","JobTitle","h2","EmployerName","p","JobDescription","JobStatus","Title","h1","PaginationContainer","PageNumber","button","AppliedJobsList","appliedJobs","setAppliedJobs","currentPage","setCurrentPage","applicationsPerPage","totalApplications","setTotalApplications","loading","setLoading","fetchAppliedJobs","page","res","data","applications","error","console","log","paginate","pageNumber","children","length","map","application","job","employer","src","employerImage","alt","title","organizationName","description","status","_id","Array","Math","ceil","keys","number","onClick","className"],"sources":["/Users/ayush/Desktop/security cw 2/React/app_final/src/pages/applicant/applications/AppliedJobsList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport { getUserAppliedJobsApi } from '../../../apis/Api';\nimport ApplicantNavbar from '../../../components/ApplicantNavbar';\nimport Loader from '../../../components/Loader';\n\nconst PageContainer = styled.div`\n  padding: 20px;\n  background-color: white;\n  min-height: calc(100vh - 60px);  // Assuming the navbar is 60px high\n`;\n\nconst JobsContainer = styled.div`\n  max-width: 1600px;\n  margin: 0 auto;\n  padding: 20px;\n  background: white;\n  border-radius: 8px;\n`;\n\nconst JobCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 20px;\n  border-bottom: 1px solid #ccc;\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nconst JobHeader = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nconst EmployerImage = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  object-fit: cover;\n`;\n\nconst JobDetails = styled.div`\n  margin-left: 20px;\n`;\n\nconst JobTitle = styled.h2`\n  font-size: 20px;\n  color: #65A168;  // Green color for the job title\n  margin: 0;\n`;\n\nconst EmployerName = styled.p`\n  font-size: 16px;\n  color: #333;\n  font-weight: bold;\n  margin: 0;\n`;\n\nconst JobDescription = styled.p`\n  font-size: 16px;\n  color: #666;\n  margin-top: 10px;\n`;\n\nconst JobStatus = styled.p`\n  font-size: 14px;\n  color: #333;\n  margin-top: 10px;\n  font-weight: bold;\n`;\n\nconst Title = styled.h1`\n  font-size: 32px;\n  color: #333;\n  text-align: left;\n  margin-bottom: 10px;\n  margin-left: 32px;\n`;\n\n// Pagination styles\nconst PaginationContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;\n\nconst PageNumber = styled.button`\n  background: none;\n  border: none;\n  padding: 5px 10px;\n  cursor: pointer;\n  color: #333;\n  font-size: 16px;\n\n  &:hover {\n    text-decoration: underline;\n  }\n\n  &.active {\n    font-weight: bold;\n    text-decoration: underline;\n  }\n`;\n\nconst AppliedJobsList = () => {\n    const [appliedJobs, setAppliedJobs] = useState([]);\n    const [currentPage, setCurrentPage] = useState(1);\n    const [applicationsPerPage] = useState(3);\n    const [totalApplications, setTotalApplications] = useState(0);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        fetchAppliedJobs(currentPage);\n    }, [currentPage]);\n\n    const fetchAppliedJobs = async (page) => {\n        try {\n            setLoading(true);\n            const res = await getUserAppliedJobsApi(page, applicationsPerPage);\n            setAppliedJobs(res.data.applications);\n            setTotalApplications(res.data.totalApplications);\n            setLoading(false);\n        } catch (error) {\n            console.log(error);\n            setLoading(false);\n        }\n    };\n\n    const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n    return (\n        <>\n            <ApplicantNavbar />\n            <PageContainer>\n                <Title>Jobs You've Applied For</Title>\n                {loading ? <Loader /> : (\n                    <>\n                        <JobsContainer>\n                            {appliedJobs.length === 0 ? (\n                                <p>No jobs applied for yet.</p>\n                            ) : (\n                                appliedJobs.map(application => (\n                                    <JobCard key={application._id}>\n                                        <JobHeader>\n                                            {application.job.employer && (\n                                                <EmployerImage\n                                                    src={`http://localhost:5500/employerImage/${application.job.employer.employerImage}`}\n                                                    alt=\"Employer\"\n                                                />\n                                            )}\n                                            <JobDetails>\n                                                <JobTitle>{application.job.title}</JobTitle>\n                                                {application.job.employer && (\n                                                    <EmployerName>{application.job.employer.organizationName}</EmployerName>\n                                                )}\n                                            </JobDetails>\n                                        </JobHeader>\n                                        <JobDescription>{application.job.description}</JobDescription>\n                                        <JobStatus>Status: {application.status}</JobStatus>\n                                    </JobCard>\n                                ))\n                            )}\n                        </JobsContainer>\n                        <PaginationContainer>\n                            {[...Array(Math.ceil(totalApplications / applicationsPerPage)).keys()].map(number => (\n                                <PageNumber\n                                    key={number + 1}\n                                    onClick={() => paginate(number + 1)}\n                                    className={currentPage === number + 1 ? 'active' : ''}\n                                >\n                                    {number + 1}\n                                </PageNumber>\n                            ))}\n                        </PaginationContainer>\n                    </>\n                )}\n            </PageContainer>\n        </>\n    );\n}\n\nexport default AppliedJobsList;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,SAAS,CAAEC,QAAQ,KAAQ,OAAO,CAClD,MAAO,CAAAC,MAAM,KAAM,mBAAmB,CACtC,OAASC,qBAAqB,KAAQ,mBAAmB,CACzD,MAAO,CAAAC,eAAe,KAAM,qCAAqC,CACjE,MAAO,CAAAC,MAAM,KAAM,4BAA4B,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAEhD,KAAM,CAAAC,aAAa,CAAGV,MAAM,CAACW,GAAG;AAChC;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,aAAa,CAAGZ,MAAM,CAACW,GAAG;AAChC;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAE,OAAO,CAAGb,MAAM,CAACW,GAAG;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAG,SAAS,CAAGd,MAAM,CAACW,GAAG;AAC5B;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAI,aAAa,CAAGf,MAAM,CAACgB,GAAG;AAChC;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,UAAU,CAAGjB,MAAM,CAACW,GAAG;AAC7B;AACA,CAAC,CAED,KAAM,CAAAO,QAAQ,CAAGlB,MAAM,CAACmB,EAAE;AAC1B;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,YAAY,CAAGpB,MAAM,CAACqB,CAAC;AAC7B;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,cAAc,CAAGtB,MAAM,CAACqB,CAAC;AAC/B;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAE,SAAS,CAAGvB,MAAM,CAACqB,CAAC;AAC1B;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAG,KAAK,CAAGxB,MAAM,CAACyB,EAAE;AACvB;AACA;AACA;AACA;AACA;AACA,CAAC,CAED;AACA,KAAM,CAAAC,mBAAmB,CAAG1B,MAAM,CAACW,GAAG;AACtC;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAgB,UAAU,CAAG3B,MAAM,CAAC4B,MAAM;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,CAED,KAAM,CAAAC,eAAe,CAAGA,CAAA,GAAM,CAC1B,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGhC,QAAQ,CAAC,EAAE,CAAC,CAClD,KAAM,CAACiC,WAAW,CAAEC,cAAc,CAAC,CAAGlC,QAAQ,CAAC,CAAC,CAAC,CACjD,KAAM,CAACmC,mBAAmB,CAAC,CAAGnC,QAAQ,CAAC,CAAC,CAAC,CACzC,KAAM,CAACoC,iBAAiB,CAAEC,oBAAoB,CAAC,CAAGrC,QAAQ,CAAC,CAAC,CAAC,CAC7D,KAAM,CAACsC,OAAO,CAAEC,UAAU,CAAC,CAAGvC,QAAQ,CAAC,IAAI,CAAC,CAE5CD,SAAS,CAAC,IAAM,CACZyC,gBAAgB,CAACP,WAAW,CAAC,CACjC,CAAC,CAAE,CAACA,WAAW,CAAC,CAAC,CAEjB,KAAM,CAAAO,gBAAgB,CAAG,KAAO,CAAAC,IAAI,EAAK,CACrC,GAAI,CACAF,UAAU,CAAC,IAAI,CAAC,CAChB,KAAM,CAAAG,GAAG,CAAG,KAAM,CAAAxC,qBAAqB,CAACuC,IAAI,CAAEN,mBAAmB,CAAC,CAClEH,cAAc,CAACU,GAAG,CAACC,IAAI,CAACC,YAAY,CAAC,CACrCP,oBAAoB,CAACK,GAAG,CAACC,IAAI,CAACP,iBAAiB,CAAC,CAChDG,UAAU,CAAC,KAAK,CAAC,CACrB,CAAE,MAAOM,KAAK,CAAE,CACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC,CAClBN,UAAU,CAAC,KAAK,CAAC,CACrB,CACJ,CAAC,CAED,KAAM,CAAAS,QAAQ,CAAIC,UAAU,EAAKf,cAAc,CAACe,UAAU,CAAC,CAE3D,mBACIzC,KAAA,CAAAE,SAAA,EAAAwC,QAAA,eACI5C,IAAA,CAACH,eAAe,GAAE,CAAC,cACnBK,KAAA,CAACG,aAAa,EAAAuC,QAAA,eACV5C,IAAA,CAACmB,KAAK,EAAAyB,QAAA,CAAC,yBAAuB,CAAO,CAAC,CACrCZ,OAAO,cAAGhC,IAAA,CAACF,MAAM,GAAE,CAAC,cACjBI,KAAA,CAAAE,SAAA,EAAAwC,QAAA,eACI5C,IAAA,CAACO,aAAa,EAAAqC,QAAA,CACTnB,WAAW,CAACoB,MAAM,GAAK,CAAC,cACrB7C,IAAA,MAAA4C,QAAA,CAAG,0BAAwB,CAAG,CAAC,CAE/BnB,WAAW,CAACqB,GAAG,CAACC,WAAW,eACvB7C,KAAA,CAACM,OAAO,EAAAoC,QAAA,eACJ1C,KAAA,CAACO,SAAS,EAAAmC,QAAA,EACLG,WAAW,CAACC,GAAG,CAACC,QAAQ,eACrBjD,IAAA,CAACU,aAAa,EACVwC,GAAG,CAAE,uCAAuCH,WAAW,CAACC,GAAG,CAACC,QAAQ,CAACE,aAAa,EAAG,CACrFC,GAAG,CAAC,UAAU,CACjB,CACJ,cACDlD,KAAA,CAACU,UAAU,EAAAgC,QAAA,eACP5C,IAAA,CAACa,QAAQ,EAAA+B,QAAA,CAAEG,WAAW,CAACC,GAAG,CAACK,KAAK,CAAW,CAAC,CAC3CN,WAAW,CAACC,GAAG,CAACC,QAAQ,eACrBjD,IAAA,CAACe,YAAY,EAAA6B,QAAA,CAAEG,WAAW,CAACC,GAAG,CAACC,QAAQ,CAACK,gBAAgB,CAAe,CAC1E,EACO,CAAC,EACN,CAAC,cACZtD,IAAA,CAACiB,cAAc,EAAA2B,QAAA,CAAEG,WAAW,CAACC,GAAG,CAACO,WAAW,CAAiB,CAAC,cAC9DrD,KAAA,CAACgB,SAAS,EAAA0B,QAAA,EAAC,UAAQ,CAACG,WAAW,CAACS,MAAM,EAAY,CAAC,GAhBzCT,WAAW,CAACU,GAiBjB,CACZ,CACJ,CACU,CAAC,cAChBzD,IAAA,CAACqB,mBAAmB,EAAAuB,QAAA,CACf,CAAC,GAAGc,KAAK,CAACC,IAAI,CAACC,IAAI,CAAC9B,iBAAiB,CAAGD,mBAAmB,CAAC,CAAC,CAACgC,IAAI,CAAC,CAAC,CAAC,CAACf,GAAG,CAACgB,MAAM,eAC7E9D,IAAA,CAACsB,UAAU,EAEPyC,OAAO,CAAEA,CAAA,GAAMrB,QAAQ,CAACoB,MAAM,CAAG,CAAC,CAAE,CACpCE,SAAS,CAAErC,WAAW,GAAKmC,MAAM,CAAG,CAAC,CAAG,QAAQ,CAAG,EAAG,CAAAlB,QAAA,CAErDkB,MAAM,CAAG,CAAC,EAJNA,MAAM,CAAG,CAKN,CACf,CAAC,CACe,CAAC,EACxB,CACL,EACU,CAAC,EAClB,CAAC,CAEX,CAAC,CAED,cAAe,CAAAtC,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}