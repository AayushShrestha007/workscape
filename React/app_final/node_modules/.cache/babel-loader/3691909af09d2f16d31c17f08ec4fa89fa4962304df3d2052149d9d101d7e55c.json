{"ast":null,"code":"import axios from\"axios\";//creating backend Config!\nconst Api=axios.create({baseURL:\"http://localhost:5500\",withCredentials:true,headers:{\"Content-Type\":\"multipart/form-data\"}});//creating config\nconst config={headers:{authorization:`Bearer ${localStorage.getItem('token')}`}};//API FOR APPLICANT\n//login api\nexport const loginUserApi=data=>Api.post(\"/api/user/login\",data);//register api \nexport const registerUserApi=data=>Api.post(\"/api/user/register\",data);//updateApplicantProfile API\nexport const updateApplicantProfile=(id,data)=>Api.put(`/api/user/update_applicant/${id}`,data,config);//Resume creation API\nexport const createResumeApi=data=>Api.post(\"/api/resume/create_resume\",data,config);//Resume fetching api\nexport const getAllResumesApi=(page,limit)=>Api.get(`/api/resume/get_all_resume?page=${page}&limit=${limit}`,config);//API FOR EMPLOYER\n//login api\nexport const loginEmployerApi=data=>Api.post(\"/api/employer/login\",data);//register api \nexport const registerEmployerApi=data=>Api.post(\"/api/employer/register\",data);//create job API\nexport const createJobApi=data=>Api.post(\"/api/job/create_job\",data,config);//updateApplicantProfile API\nexport const updateEmployerProfile=(id,data)=>Api.put(`/api/employer/update_employer/${id}`,data,config);//fetch all open job by employer API\nexport const getAllOpenJobByEmployerApi=(page,limit)=>Api.get(`/api/job/open_jobs_by_employer?page=${page}&limit=${limit}`,config);//fetch all open job API\nexport const getAllOpenJobApi=(page,limit)=>Api.get(`/api/job/get_all_open_jobs?page=${page}&limit=${limit}`,config);//fetch job details by id\nexport const getJobDetailsByIdApi=id=>Api.get(`/api/job/get_job_details/${id}`,config);//create application api\nexport const applyToJobApi=id=>Api.post(\"/api/applications/apply\",id,config);//get applicants for job api\nexport const getApplicantsForJobApi=jobId=>Api.get(`/api/job/${jobId}`,config);//get applied jobs of currently logged in user\nexport const getUserAppliedJobsApi=(page,limit)=>Api.get(`/api/applications/get_all_applications?page=${page}&limit=${limit}`,config);//get offered applications of currently logged in user\nexport const getOfferedApplicationsApi=(page,limit)=>Api.get(`/api/applications/get_all_offered_applications?page=${page}&limit=${limit}`,config);//get hired application of currently logged in user\nexport const getHiredApplicationApi=(page,limit)=>Api.get(`/api/applications/get_hired_application?page=${page}&limit=${limit}`,config);//get hired application of currently logged in user\nexport const getCompletedApplicationApi=(page,limit)=>Api.get(`/api/applications/get_complete_applications?page=${page}&limit=${limit}`,config);//get applications of currently logged in employer\nexport const getApplicationsByEmployerApi=(page,limit)=>Api.get(`/api/applications/get_employer_applications?page=${page}&limit=${limit}`,config);//get hired applications of currently logged in employer\nexport const getHiredApplicationsByEmployerApi=(page,limit)=>Api.get(`/api/applications/get_employer_hired_applications?page=${page}&limit=${limit}`,config);//get complete applications of currently logged in employer\nexport const getCompleteApplicationsByEmployerApi=(page,limit)=>Api.get(`/api/applications/get_employer_complete_applications?page=${page}&limit=${limit}`,config);//update application status \nexport const updateApplicationStatusApi=data=>Api.put(\"/api/applications/update_application_status\",data,config);","map":{"version":3,"names":["axios","Api","create","baseURL","withCredentials","headers","config","authorization","localStorage","getItem","loginUserApi","data","post","registerUserApi","updateApplicantProfile","id","put","createResumeApi","getAllResumesApi","page","limit","get","loginEmployerApi","registerEmployerApi","createJobApi","updateEmployerProfile","getAllOpenJobByEmployerApi","getAllOpenJobApi","getJobDetailsByIdApi","applyToJobApi","getApplicantsForJobApi","jobId","getUserAppliedJobsApi","getOfferedApplicationsApi","getHiredApplicationApi","getCompletedApplicationApi","getApplicationsByEmployerApi","getHiredApplicationsByEmployerApi","getCompleteApplicationsByEmployerApi","updateApplicationStatusApi"],"sources":["/Users/ayush/Desktop/security cw 2/React/app_final/src/apis/Api.js"],"sourcesContent":["import axios from \"axios\";\n\n//creating backend Config!\nconst Api = axios.create({\n    baseURL: \"http://localhost:5500\",\n    withCredentials: true,\n    headers: {\n        \"Content-Type\": \"multipart/form-data\"\n    }\n\n})\n\n//creating config\nconst config = {\n    headers: {\n        authorization: `Bearer ${localStorage.getItem('token')}`,\n    },\n};\n\n//API FOR APPLICANT\n//login api\nexport const loginUserApi = (data) => Api.post(\"/api/user/login\", data)\n//register api \nexport const registerUserApi = (data) => Api.post(\"/api/user/register\", data)\n\n//updateApplicantProfile API\nexport const updateApplicantProfile = (id, data) => Api.put(`/api/user/update_applicant/${id}`, data, config)\n\n//Resume creation API\nexport const createResumeApi = (data) => Api.post(\"/api/resume/create_resume\", data, config)\n\n//Resume fetching api\nexport const getAllResumesApi = (page, limit) => Api.get(`/api/resume/get_all_resume?page=${page}&limit=${limit}`, config)\n\n//API FOR EMPLOYER\n//login api\nexport const loginEmployerApi = (data) => Api.post(\"/api/employer/login\", data)\n//register api \nexport const registerEmployerApi = (data) => Api.post(\"/api/employer/register\", data)\n//create job API\nexport const createJobApi = (data) => Api.post(\"/api/job/create_job\", data, config)\n\n//updateApplicantProfile API\nexport const updateEmployerProfile = (id, data) => Api.put(`/api/employer/update_employer/${id}`, data, config)\n\n//fetch all open job by employer API\nexport const getAllOpenJobByEmployerApi = (page, limit) => Api.get(`/api/job/open_jobs_by_employer?page=${page}&limit=${limit}`, config)\n\n//fetch all open job API\nexport const getAllOpenJobApi = (page, limit) => Api.get(`/api/job/get_all_open_jobs?page=${page}&limit=${limit}`, config)\n\n//fetch job details by id\nexport const getJobDetailsByIdApi = (id) => Api.get(`/api/job/get_job_details/${id}`, config)\n\n//create application api\nexport const applyToJobApi = (id) => Api.post(\"/api/applications/apply\", id, config)\n\n//get applicants for job api\nexport const getApplicantsForJobApi = (jobId) => Api.get(`/api/job/${jobId}`, config);\n\n//get applied jobs of currently logged in user\nexport const getUserAppliedJobsApi = (page, limit) => Api.get(`/api/applications/get_all_applications?page=${page}&limit=${limit}`, config);\n\n//get offered applications of currently logged in user\nexport const getOfferedApplicationsApi = (page, limit) => Api.get(`/api/applications/get_all_offered_applications?page=${page}&limit=${limit}`, config);\n\n\n//get hired application of currently logged in user\nexport const getHiredApplicationApi = (page, limit) => Api.get(`/api/applications/get_hired_application?page=${page}&limit=${limit}`, config);\n\n//get hired application of currently logged in user\nexport const getCompletedApplicationApi = (page, limit) => Api.get(`/api/applications/get_complete_applications?page=${page}&limit=${limit}`, config);\n\n\n//get applications of currently logged in employer\nexport const getApplicationsByEmployerApi = (page, limit) => Api.get(`/api/applications/get_employer_applications?page=${page}&limit=${limit}`, config);\n\n//get hired applications of currently logged in employer\nexport const getHiredApplicationsByEmployerApi = (page, limit) => Api.get(`/api/applications/get_employer_hired_applications?page=${page}&limit=${limit}`, config);\n\n//get complete applications of currently logged in employer\nexport const getCompleteApplicationsByEmployerApi = (page, limit) => Api.get(`/api/applications/get_employer_complete_applications?page=${page}&limit=${limit}`, config);\n\n\n//update application status \nexport const updateApplicationStatusApi = (data) => Api.put(\"/api/applications/update_application_status\", data, config)\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}