{"ast":null,"code":"var _jsxFileName = \"/Users/ayush/Desktop/Developer/React/app_final/src/pages/applicant/create_resume/ResumeBuilderPage.jsx\",\n  _s = $RefreshSig$();\nimport { Document, Page, StyleSheet, Text, pdf } from '@react-pdf/renderer';\nimport React, { useState } from 'react';\nimport { saveResumeApi } from '../../../apis/Api';\n\n// Styles for PDF\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'column',\n    padding: 30\n  },\n  section: {\n    marginBottom: 10\n  }\n});\n\n// PDF Document Component\nconst MyDocument = ({\n  formData\n}) => /*#__PURE__*/_jsxDEV(Document, {\n  children: /*#__PURE__*/_jsxDEV(Page, {\n    size: \"A4\",\n    style: styles.page,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      children: [\"Name: \", formData.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: [\"Email: \", formData.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      children: [\"Phone: \", formData.phone]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 9\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 14,\n  columnNumber: 5\n}, this);\n_c = MyDocument;\nconst FormAndPdf = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    phone: ''\n  });\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleFormSubmit = async () => {\n    const doc = /*#__PURE__*/_jsxDEV(MyDocument, {\n      formData: formData\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this);\n    const asPdf = pdf([]); // Create an instance of PDF\n    asPdf.updateContainer(doc);\n    const blob = await asPdf.toBlob(); // Generate blob\n\n    // FormData to send via HTTP\n    const fileData = new FormData();\n    fileData.append(\"file\", blob, \"report.pdf\");\n    try {\n      const response = await saveResumeApi(fileData); // Using the API function for file uploads\n      console.log('Resume submitted successfully:', response.data);\n    } catch (error) {\n      console.error('Error submitting resume:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: formData.name,\n      onChange: handleInputChange,\n      placeholder: \"Enter name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: formData.email,\n      onChange: handleInputChange,\n      placeholder: \"Enter email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"phone\",\n      value: formData.phone,\n      onChange: handleInputChange,\n      placeholder: \"Enter phone number\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFormSubmit,\n      children: \"Generate and Upload PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(FormAndPdf, \"P90qboe8122waGjskj884iGblmw=\");\n_c2 = FormAndPdf;\nexport default FormAndPdf;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyDocument\");\n$RefreshReg$(_c2, \"FormAndPdf\");","map":{"version":3,"names":["Document","Page","StyleSheet","Text","pdf","React","useState","saveResumeApi","jsxDEV","_jsxDEV","styles","create","page","flexDirection","padding","section","marginBottom","MyDocument","formData","children","size","style","name","fileName","_jsxFileName","lineNumber","columnNumber","email","phone","_c","FormAndPdf","_s","setFormData","handleInputChange","e","value","target","prev","handleFormSubmit","doc","asPdf","updateContainer","blob","toBlob","fileData","FormData","append","response","console","log","data","error","type","onChange","placeholder","onClick","_c2","$RefreshReg$"],"sources":["/Users/ayush/Desktop/Developer/React/app_final/src/pages/applicant/create_resume/ResumeBuilderPage.jsx"],"sourcesContent":["import { Document, Page, StyleSheet, Text, pdf } from '@react-pdf/renderer';\nimport React, { useState } from 'react';\nimport { saveResumeApi } from '../../../apis/Api';\n\n\n// Styles for PDF\nconst styles = StyleSheet.create({\n    page: { flexDirection: 'column', padding: 30 },\n    section: { marginBottom: 10 },\n});\n\n// PDF Document Component\nconst MyDocument = ({ formData }) => (\n    <Document>\n        <Page size=\"A4\" style={styles.page}>\n            <Text>Name: {formData.name}</Text>\n            <Text>Email: {formData.email}</Text>\n            <Text>Phone: {formData.phone}</Text>\n        </Page>\n    </Document>\n);\n\nconst FormAndPdf = () => {\n    const [formData, setFormData] = useState({ name: '', email: '', phone: '' });\n\n    const handleInputChange = (e) => {\n        const { name, value } = e.target;\n        setFormData(prev => ({ ...prev, [name]: value }));\n    };\n\n    const handleFormSubmit = async () => {\n        const doc = <MyDocument formData={formData} />;\n        const asPdf = pdf([]); // Create an instance of PDF\n        asPdf.updateContainer(doc);\n        const blob = await asPdf.toBlob(); // Generate blob\n\n        // FormData to send via HTTP\n        const fileData = new FormData();\n        fileData.append(\"file\", blob, \"report.pdf\");\n\n        try {\n            const response = await saveResumeApi(fileData); // Using the API function for file uploads\n            console.log('Resume submitted successfully:', response.data);\n        } catch (error) {\n            console.error('Error submitting resume:', error);\n        }\n    };\n\n    return (\n        <div>\n            <input type=\"text\" name=\"name\" value={formData.name} onChange={handleInputChange} placeholder=\"Enter name\" />\n            <input type=\"email\" name=\"email\" value={formData.email} onChange={handleInputChange} placeholder=\"Enter email\" />\n            <input type=\"text\" name=\"phone\" value={formData.phone} onChange={handleInputChange} placeholder=\"Enter phone number\" />\n            <button onClick={handleFormSubmit}>Generate and Upload PDF</button>\n        </div>\n    );\n};\n\nexport default FormAndPdf;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}