{"ast":null,"code":"import * as r from \"restructure\";\nclass ImageData {\n  decode(stream) {\n    const buffer = stream.buffer.slice(stream.pos);\n    let length = 0;\n    let i = buffer.indexOf(0xff);\n    while (i !== -1) {\n      length = i;\n      const nextByte = buffer[length + 1];\n      const comesRestart = nextByte >= 0xd0 && nextByte <= 0xd7;\n      if (nextByte !== 0x00 && !comesRestart) break;\n      i = buffer.indexOf(0xff, i + 1);\n    }\n    stream.pos += length;\n    return buffer.slice(0, length);\n  }\n}\nconst SOSComponentSpecification = new r.Struct({\n  scanComponentSelector: r.uint8,\n  entropyCodingTable: new r.Buffer(1)\n});\nconst SOSMarker = {\n  name: () => \"SOS\",\n  length: r.uint16be,\n  numberOfImageComponents: r.uint8,\n  componentSpecifications: new r.Array(SOSComponentSpecification, parent => parent.numberOfImageComponents),\n  startOfSpectral: r.uint8,\n  endOfSpectral: r.uint8,\n  successiveApproximationBit: new r.Buffer(1),\n  data: new ImageData()\n};\nexport default SOSMarker;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}