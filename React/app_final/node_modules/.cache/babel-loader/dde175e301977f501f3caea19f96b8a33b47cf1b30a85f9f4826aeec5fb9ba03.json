{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useParams}from'react-router-dom';import{toast,ToastContainer}from'react-toastify';import'react-toastify/dist/ReactToastify.css';import styled from'styled-components';import{getApplicantsForJobApi,updateApplicationStatusApi}from'../../../apis/Api';import EmployerNavbar from'../../../components/EmployerNavbar';import Loader from'../../../components/Loader';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const PageContainer=styled.div`\n  padding: 20px;\n  padding-top: 30px;\n  background-color: white;\n  min-height: calc(100vh - 60px);  // Assuming the navbar is 60px high\n`;const ApplicantsContainer=styled.div`\n  max-width: 1600px;\n  margin: 0 auto;\n  padding: 20px;\n  padding-top: 5px;\n  background: white;\n  border-radius: 8px;\n`;const ApplicantCard=styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 20px;\n  border-bottom: 1px solid #ccc;\n  &:last-child {\n    border-bottom: none;\n  }\n  border-radius: 8px;\n`;const ApplicantHeader=styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;const ApplicantImage=styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  object-fit: cover;\n`;const ApplicantDetailsContainer=styled.div`\n  margin-left: 20px;\n`;const ApplicantName=styled.h2`\n  font-size: 20px;\n  color: #65A168;  // Green color for the applicant name\n  margin: 0;\n`;const ApplicantEmail=styled.p`\n  font-size: 16px;\n  color: #666;\n  margin: 5px 0;\n`;const ButtonContainer=styled.div`\n  display: flex;\n  gap: 10px;\n  margin-top: 10px;\n`;const Button=styled.button`\n  background-color: #3d96fd;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 40px;  // Rounded corners\n  cursor: pointer;\n  font-size: 16px;\n  align-self: flex-start;\n`;const ShortListButton=styled(Button)`\n  background-color: #2d69b3;  // Green color for the short list button\n`;const Title=styled.h1`\n  font-size: 32px;\n  color: #333;\n  text-align: left;\n  margin-bottom: 26px;\n  margin-left: 34px;\n`;const JobApplicants=()=>{const{jobId}=useParams();const[applicants,setApplicants]=useState([]);const[loading,setLoading]=useState(true);useEffect(()=>{setLoading(true);getApplicantsForJobApi(jobId).then(res=>{console.log('API response:',res.data);setApplicants(res.data.applicants);setLoading(false);}).catch(error=>{console.log('Error fetching applicants:',error);setLoading(false);});},[jobId]);const handleShortList=async applicationId=>{console.log('Shortlisting application ID:',applicationId);try{await updateApplicationStatusApi({applicationId,status:'shortlisted'});toast.success('Applicant Shortlisted');// Fetch applicants again to update the list\nconst res=await getApplicantsForJobApi(jobId);console.log('Updated applicants list:',res.data.applicants);setApplicants(res.data.applicants);}catch(error){console.error('Error updating status:',error);}};const findApplication=(applicant,jobId)=>{if(!applicant||!applicant.applications){console.log('Applicant or applications not defined:',applicant);return null;}const application=applicant.applications.find(app=>app.job.toString()===jobId);if(!application){console.log('Application not found for applicant:',applicant.name);return null;}console.log('Found application for applicant:',applicant.name,'Application:',application);return application;};const getResumeUrl=(applicant,resumeId)=>{const resume=applicant.resumes.find(resume=>resume._id.toString()===resumeId.toString());return resume?resume.fileUrl:null;};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(EmployerNavbar,{}),/*#__PURE__*/_jsx(ToastContainer,{}),/*#__PURE__*/_jsxs(PageContainer,{children:[/*#__PURE__*/_jsx(Title,{children:\"Applicants\"}),loading?/*#__PURE__*/_jsx(Loader,{}):/*#__PURE__*/_jsx(ApplicantsContainer,{children:applicants.map(applicant=>/*#__PURE__*/_jsxs(ApplicantCard,{children:[/*#__PURE__*/_jsxs(ApplicantHeader,{children:[/*#__PURE__*/_jsx(ApplicantImage,{src:`http://localhost:5500/userImage/${applicant.userImage}`,alt:\"Applicant\"}),/*#__PURE__*/_jsxs(ApplicantDetailsContainer,{children:[/*#__PURE__*/_jsx(ApplicantName,{children:applicant.name}),/*#__PURE__*/_jsx(ApplicantEmail,{children:applicant.email})]})]}),/*#__PURE__*/_jsxs(ButtonContainer,{children:[/*#__PURE__*/_jsx(Button,{onClick:()=>{const applicationId=findApplication(applicant,jobId);const resumeUrl=getResumeUrl(applicant,applicationId.resume);window.open(`http://localhost:5500${resumeUrl}`,'_blank');},children:\"Review Resume\"}),/*#__PURE__*/_jsx(ShortListButton,{onClick:()=>{const applicationId=findApplication(applicant,jobId)._id;if(applicationId){handleShortList(applicationId);}else{console.log('Application ID not found for applicant:',applicant.name);}},children:\"Short List\"})]})]},applicant._id))})]})]});};export default JobApplicants;","map":{"version":3,"names":["React","useEffect","useState","useParams","toast","ToastContainer","styled","getApplicantsForJobApi","updateApplicationStatusApi","EmployerNavbar","Loader","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","PageContainer","div","ApplicantsContainer","ApplicantCard","ApplicantHeader","ApplicantImage","img","ApplicantDetailsContainer","ApplicantName","h2","ApplicantEmail","p","ButtonContainer","Button","button","ShortListButton","Title","h1","JobApplicants","jobId","applicants","setApplicants","loading","setLoading","then","res","console","log","data","catch","error","handleShortList","applicationId","status","success","findApplication","applicant","applications","application","find","app","job","toString","name","getResumeUrl","resumeId","resume","resumes","_id","fileUrl","children","map","src","userImage","alt","email","onClick","resumeUrl","window","open"],"sources":["/Users/ayush/Desktop/security cw 2/React/app_final/src/pages/employer/job_applicants/JobApplicants.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport styled from 'styled-components';\nimport { getApplicantsForJobApi, updateApplicationStatusApi } from '../../../apis/Api';\nimport EmployerNavbar from '../../../components/EmployerNavbar';\nimport Loader from '../../../components/Loader';\n\nconst PageContainer = styled.div`\n  padding: 20px;\n  padding-top: 30px;\n  background-color: white;\n  min-height: calc(100vh - 60px);  // Assuming the navbar is 60px high\n`;\n\nconst ApplicantsContainer = styled.div`\n  max-width: 1600px;\n  margin: 0 auto;\n  padding: 20px;\n  padding-top: 5px;\n  background: white;\n  border-radius: 8px;\n`;\n\nconst ApplicantCard = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  padding: 20px;\n  border-bottom: 1px solid #ccc;\n  &:last-child {\n    border-bottom: none;\n  }\n  border-radius: 8px;\n`;\n\nconst ApplicantHeader = styled.div`\n  display: flex;\n  align-items: center;\n  width: 100%;\n`;\n\nconst ApplicantImage = styled.img`\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  object-fit: cover;\n`;\n\nconst ApplicantDetailsContainer = styled.div`\n  margin-left: 20px;\n`;\n\nconst ApplicantName = styled.h2`\n  font-size: 20px;\n  color: #65A168;  // Green color for the applicant name\n  margin: 0;\n`;\n\nconst ApplicantEmail = styled.p`\n  font-size: 16px;\n  color: #666;\n  margin: 5px 0;\n`;\n\nconst ButtonContainer = styled.div`\n  display: flex;\n  gap: 10px;\n  margin-top: 10px;\n`;\n\nconst Button = styled.button`\n  background-color: #3d96fd;\n  color: white;\n  padding: 10px 20px;\n  border: none;\n  border-radius: 40px;  // Rounded corners\n  cursor: pointer;\n  font-size: 16px;\n  align-self: flex-start;\n`;\n\nconst ShortListButton = styled(Button)`\n  background-color: #2d69b3;  // Green color for the short list button\n`;\n\nconst Title = styled.h1`\n  font-size: 32px;\n  color: #333;\n  text-align: left;\n  margin-bottom: 26px;\n  margin-left: 34px;\n`;\n\nconst JobApplicants = () => {\n  const { jobId } = useParams();\n  const [applicants, setApplicants] = useState([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    setLoading(true);\n    getApplicantsForJobApi(jobId).then((res) => {\n      console.log('API response:', res.data);\n      setApplicants(res.data.applicants);\n      setLoading(false);\n    }).catch((error) => {\n      console.log('Error fetching applicants:', error);\n      setLoading(false);\n    });\n  }, [jobId]);\n\n  const handleShortList = async (applicationId) => {\n    console.log('Shortlisting application ID:', applicationId);\n    try {\n      await updateApplicationStatusApi({\n        applicationId,\n        status: 'shortlisted'\n      });\n      toast.success('Applicant Shortlisted');\n      // Fetch applicants again to update the list\n      const res = await getApplicantsForJobApi(jobId);\n      console.log('Updated applicants list:', res.data.applicants);\n      setApplicants(res.data.applicants);\n    } catch (error) {\n      console.error('Error updating status:', error);\n    }\n  };\n\n  const findApplication = (applicant, jobId) => {\n    if (!applicant || !applicant.applications) {\n      console.log('Applicant or applications not defined:', applicant);\n      return null;\n    }\n\n    const application = applicant.applications.find(app => app.job.toString() === jobId);\n    if (!application) {\n      console.log('Application not found for applicant:', applicant.name);\n      return null;\n    }\n\n    console.log('Found application for applicant:', applicant.name, 'Application:', application);\n    return application\n  };\n\n  const getResumeUrl = (applicant, resumeId) => {\n    const resume = applicant.resumes.find(resume => resume._id.toString() === resumeId.toString());\n    return resume ? resume.fileUrl : null;\n  };\n\n  return (\n    <>\n      <EmployerNavbar />\n      <ToastContainer />\n      <PageContainer>\n        <Title>Applicants</Title>\n        {loading ? (\n          <Loader />\n        ) : (\n          <ApplicantsContainer>\n            {applicants.map(applicant => (\n              <ApplicantCard key={applicant._id}>\n                <ApplicantHeader>\n                  <ApplicantImage src={`http://localhost:5500/userImage/${applicant.userImage}`} alt=\"Applicant\" />\n                  <ApplicantDetailsContainer>\n                    <ApplicantName>{applicant.name}</ApplicantName>\n                    <ApplicantEmail>{applicant.email}</ApplicantEmail>\n                  </ApplicantDetailsContainer>\n                </ApplicantHeader>\n                <ButtonContainer>\n                  <Button onClick={() => {\n                    const applicationId = findApplication(applicant, jobId);\n                    const resumeUrl = getResumeUrl(applicant, applicationId.resume);\n                    window.open(`http://localhost:5500${resumeUrl}`, '_blank');\n                  }}>\n                    Review Resume\n                  </Button>\n                  <ShortListButton onClick={() => {\n                    const applicationId = findApplication(applicant, jobId)._id;\n                    if (applicationId) {\n                      handleShortList(applicationId);\n                    } else {\n                      console.log('Application ID not found for applicant:', applicant.name);\n                    }\n                  }}>\n                    Short List\n                  </ShortListButton>\n                </ButtonContainer>\n              </ApplicantCard>\n            ))}\n          </ApplicantsContainer>\n        )}\n      </PageContainer>\n    </>\n  );\n}\n\nexport default JobApplicants;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}