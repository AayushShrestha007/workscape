{"ast":null,"code":"var _jsxFileName = \"/Users/ayush/Desktop/Developer/React/app_final/src/pages/applicant/create_resume/ResumeBuilderPage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { PDFDownloadLink, Document, Page, Text, StyleSheet } from '@react-pdf/renderer';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst styles = StyleSheet.create({\n  page: {\n    flexDirection: 'column',\n    padding: 30\n  },\n  section: {\n    marginBottom: 10\n  }\n});\nconst MyDocument = ({\n  formData\n}) => /*#__PURE__*/_jsxDEV(Document, {\n  children: /*#__PURE__*/_jsxDEV(Page, {\n    style: styles.page,\n    children: [/*#__PURE__*/_jsxDEV(Text, {\n      style: styles.section,\n      children: [\"Name: \", formData.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      style: styles.section,\n      children: [\"Email: \", formData.email]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 3\n}, this);\n_c = MyDocument;\nconst App = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    name: '',\n    email: ''\n  });\n  const [pdfBlob, setPdfBlob] = useState(null);\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleFormSubmit = async () => {\n    const blob = await fetch( /*#__PURE__*/_jsxDEV(PDFDownloadLink, {\n      document: /*#__PURE__*/_jsxDEV(MyDocument, {\n        formData: formData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 34\n      }, this),\n      fileName: \"somename.pdf\",\n      children: ({\n        blob\n      }) => blob\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)).then(res => res.blob());\n    setPdfBlob(blob);\n    const formData = new FormData();\n    formData.append(\"file\", blob, \"filename.pdf\");\n\n    // Send to backend\n    axios.post('http://localhost:5000/api/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      console.log(\"PDF uploaded\", response.data);\n    }).catch(error => {\n      console.error(\"Error uploading PDF\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: formData.name,\n      onChange: handleInputChange,\n      placeholder: \"Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"email\",\n      name: \"email\",\n      value: formData.email,\n      onChange: handleInputChange,\n      placeholder: \"Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleFormSubmit,\n      children: \"Generate and Upload PDF\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), pdfBlob && /*#__PURE__*/_jsxDEV(\"iframe\", {\n      src: URL.createObjectURL(pdfBlob),\n      width: \"100%\",\n      height: \"600\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 19\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"nWz/42Z7QOA+3ed4ER+F3mD3F6U=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"MyDocument\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useState","PDFDownloadLink","Document","Page","Text","StyleSheet","axios","jsxDEV","_jsxDEV","styles","create","page","flexDirection","padding","section","marginBottom","MyDocument","formData","children","style","name","fileName","_jsxFileName","lineNumber","columnNumber","email","_c","App","_s","setFormData","pdfBlob","setPdfBlob","handleInputChange","e","value","target","prev","handleFormSubmit","blob","fetch","document","then","res","FormData","append","post","headers","response","console","log","data","catch","error","type","onChange","placeholder","onClick","src","URL","createObjectURL","width","height","_c2","$RefreshReg$"],"sources":["/Users/ayush/Desktop/Developer/React/app_final/src/pages/applicant/create_resume/ResumeBuilderPage.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { PDFDownloadLink, Document, Page, Text, StyleSheet } from '@react-pdf/renderer';\nimport axios from 'axios';\n\nconst styles = StyleSheet.create({\n  page: { flexDirection: 'column', padding: 30 },\n  section: { marginBottom: 10 },\n});\n\nconst MyDocument = ({ formData }) => (\n  <Document>\n    <Page style={styles.page}>\n      <Text style={styles.section}>Name: {formData.name}</Text>\n      <Text style={styles.section}>Email: {formData.email}</Text>\n    </Page>\n  </Document>\n);\n\nconst App = () => {\n  const [formData, setFormData] = useState({ name: '', email: '' });\n  const [pdfBlob, setPdfBlob] = useState(null);\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target;\n    setFormData(prev => ({ ...prev, [name]: value }));\n  };\n\n  const handleFormSubmit = async () => {\n    const blob = await fetch(\n      <PDFDownloadLink document={<MyDocument formData={formData} />} fileName=\"somename.pdf\">\n        {({ blob }) => blob}\n      </PDFDownloadLink>\n    ).then(res => res.blob());\n\n    setPdfBlob(blob);\n    const formData = new FormData();\n    formData.append(\"file\", blob, \"filename.pdf\");\n\n    // Send to backend\n    axios.post('http://localhost:5000/api/upload', formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(response => {\n      console.log(\"PDF uploaded\", response.data);\n    }).catch(error => {\n      console.error(\"Error uploading PDF\", error);\n    });\n  };\n\n  return (\n    <div>\n      <input type=\"text\" name=\"name\" value={formData.name} onChange={handleInputChange} placeholder=\"Name\" />\n      <input type=\"email\" name=\"email\" value={formData.email} onChange={handleInputChange} placeholder=\"Email\" />\n      <button onClick={handleFormSubmit}>Generate and Upload PDF</button>\n      {pdfBlob && <iframe src={URL.createObjectURL(pdfBlob)} width=\"100%\" height=\"600\"></iframe>}\n    </div>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}