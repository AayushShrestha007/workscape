{"ast":null,"code":"\n\n// import React, { useState } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { toast } from 'react-toastify';\n// import styled from 'styled-components';\n// import { registerUserApi } from '../../apis/Api';\n\n// const Container = styled.div`\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   height: 100vh;\n//   background-color: #fff;\n// `;\n\n// const RegisterFormWrapper = styled.div`\n//   display: flex;\n//   background: #fff;\n//   border-radius: 10px;\n//   box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n// `;\n\n// const ImageWrapper = styled.div`\n//   display: none;\n//   @media (min-width: 768px) {\n//     display: flex;\n//     justify-content: center;\n//     align-items: center;\n//     background-color: #1CB173;\n//     border-top-left-radius: 10px;\n//     border-bottom-left-radius: 10px;\n//   }\n// `;\n\n// const RegisterForm = styled.div`\n//   width: 350px;\n//   padding: 40px;\n//   text-align: center;\n// `;\n\n// const Image = styled.img`\n//   width: 300px;\n//   border-top-left-radius: 10px;\n//   border-bottom-left-radius: 10px;\n// `;\n\n// const Title = styled.h2`\n//   margin-bottom: 20px;\n//   font-size: 24px;\n//   color: #333;\n// `;\n\n// const Input = styled.input`\n//   width: 100%;\n//   padding: 10px;\n//   margin: 10px 0;\n//   border: 1px solid #ccc;\n//   border-radius: 5px;\n//   font-size: 16px;\n// `;\n\n// const Button = styled.button`\n//   width: 100%;\n//   padding: 10px;\n//   border: none;\n//   border-radius: 5px;\n//   background-color: #108A00;\n//   color: white;\n//   font-size: 16px;\n//   cursor: pointer;\n//   margin-top: 10px;\n// `;\n\n// const Text = styled.p`\n//   margin-top: 20px;\n//   font-size: 14px;\n//   color: #666;\n// `;\n\n// const LoginLink = styled(Link)`\n//   color: #007bff;\n//   text-decoration: none;\n//   &:hover {\n//     text-decoration: underline;\n//   }\n// `;\n\n// const RegisterPage = () => {\n\n//   //logic section\n\n//   //make a useState for 5 fields\n//   const [name, setName] = useState('')\n//   const [email, setEmail] = useState('')\n//   const [phone, setPhone] = useState('')\n//   const [password, setPassword] = useState('')\n//   const [confirmPassword, setConfirmPassword] = useState('')\n\n//   //use state for error message\n//   const [nameError, setNameError] = useState('')\n//   const [emailError, setEmailError] = useState('')\n//   const [phoneError, setPhoneError] = useState('')\n//   const [passwordError, setPasswordError] = useState('')\n//   const [confirmPasswordError, setConfirmPasswordError] = useState('')\n\n//   const navigate = useNavigate()\n\n//   //validation\n//   var validate = () => {\n//     var isValid = true;\n\n//     //validate the firstName\n//     if (name.trim() === \"\") {\n//       setNameError(\"Name is required\")\n//       isValid = false;\n//     }\n\n//     if (email.trim() === '' || !email.includes('@')) {\n//       setEmailError(\"Email is required\")\n//       isValid = false;\n//     }\n\n//     if (phone.trim() === \"\") {\n//       setPasswordError(\"Phone is required\")\n//       isValid = false;\n//     }\n\n//     if (password.trim() === \"\") {\n//       setPasswordError(\"Password is required\")\n//       isValid = false;\n//     }\n\n//     if (confirmPassword.trim() === \"\") {\n//       setConfirmPasswordError(\"Confirm Password is required\")\n//       isValid = false;\n//     }\n\n//     if (confirmPassword.trim() !== password.trim()) {\n//       setConfirmPasswordError(\"Password and confirmation password don't match\")\n//       isValid = false;\n//     }\n//     return isValid;\n\n//   }\n\n//   //submit butoton function\n//   const handleSubmit = (e) => {\n//     e.preventDefault()\n\n//     //call the validator\n//     var isValidated = validate();\n//     if (!isValidated) {\n//       return\n//     }\n\n//     //register user Api \n\n//     //making json object\n//     const data = {\n//       \"name\": name,\n//       \"phone\": phone,\n//       \"email\": email,\n//       \"password\": password,\n//     }\n\n//     registerUserApi(data).then((res) => {\n\n//       //received data: success, message\n//       if (res.data.success === false) {\n//         toast.error(res.data.message)\n//       }\n//       else {\n//         toast.success(res.data.message)\n//         navigate('/login');\n\n//       }\n\n//     })\n\n//   }\n\n//   return (\n//     <Container>\n//       <RegisterFormWrapper>\n//         <ImageWrapper>\n//           <Image src=\"/assets/images/register_image.png\" alt=\"Register\" />\n//         </ImageWrapper>\n//         <RegisterForm>\n//           <Title>Register To Job Mate</Title>\n//           <Input\n//             type=\"text\"\n//             placeholder=\"Name\"\n//             className=\"form-control\"\n//             onChange={(e) => setName(e.target.value)}\n//           />\n//           {\n//             nameError && <p className='text-danger'>{nameError}</p>\n//           }\n//           <Input\n//             type=\"text\"\n//             placeholder=\"Email Address\"\n//             className=\"form-control\"\n//             onChange={(e) => setEmail(e.target.value)}\n//           />\n//           {\n//             emailError && <p className='text-danger'>{emailError}</p>\n//           }\n//           <Input\n//             type=\"text\"\n//             placeholder=\"Phone number\"\n//             className=\"form-control\"\n//             onChange={(e) => setPhone(e.target.value)}\n//           />\n//           {\n//             phoneError && <p className='text-danger'>{phoneError}</p>\n//           }\n//           <Input\n//             type=\"text\"\n//             placeholder=\"Password\"\n//             lassName=\"form-control\"\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//           {\n//             passwordError && <p className='text-danger'>{passwordError}</p>\n//           }\n//           <Input\n//             type=\"text\"\n//             placeholder=\"Confirm Password\"\n//             className=\"form-control\"\n//             onChange={(e) => setConfirmPassword(e.target.value)}\n//           />\n//           {\n//             confirmPasswordError && <p className='text-danger'>{confirmPasswordError}</p>\n//           }\n//           <Button onClick={handleSubmit}>Register</Button>\n//           <Text>\n//             Already Have An Account? <LoginLink to=\"/login\">Login here</LoginLink>\n//           </Text>\n//         </RegisterForm>\n//       </RegisterFormWrapper>\n//     </Container>\n//   );\n// };\n\n// export default RegisterPage;","map":{"version":3,"names":[],"sources":["/Users/ayush/Desktop/Developer/React/app_final/src/pages/register/Register.jsx"],"sourcesContent":["\n\n\n// import React, { useState } from 'react';\n// import { Link, useNavigate } from 'react-router-dom';\n// import { toast } from 'react-toastify';\n// import styled from 'styled-components';\n// import { registerUserApi } from '../../apis/Api';\n\n// const Container = styled.div`\n//   display: flex;\n//   justify-content: center;\n//   align-items: center;\n//   height: 100vh;\n//   background-color: #fff;\n// `;\n\n// const RegisterFormWrapper = styled.div`\n//   display: flex;\n//   background: #fff;\n//   border-radius: 10px;\n//   box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n// `;\n\n// const ImageWrapper = styled.div`\n//   display: none;\n//   @media (min-width: 768px) {\n//     display: flex;\n//     justify-content: center;\n//     align-items: center;\n//     background-color: #1CB173;\n//     border-top-left-radius: 10px;\n//     border-bottom-left-radius: 10px;\n//   }\n// `;\n\n// const RegisterForm = styled.div`\n//   width: 350px;\n//   padding: 40px;\n//   text-align: center;\n// `;\n\n// const Image = styled.img`\n//   width: 300px;\n//   border-top-left-radius: 10px;\n//   border-bottom-left-radius: 10px;\n// `;\n\n// const Title = styled.h2`\n//   margin-bottom: 20px;\n//   font-size: 24px;\n//   color: #333;\n// `;\n\n// const Input = styled.input`\n//   width: 100%;\n//   padding: 10px;\n//   margin: 10px 0;\n//   border: 1px solid #ccc;\n//   border-radius: 5px;\n//   font-size: 16px;\n// `;\n\n// const Button = styled.button`\n//   width: 100%;\n//   padding: 10px;\n//   border: none;\n//   border-radius: 5px;\n//   background-color: #108A00;\n//   color: white;\n//   font-size: 16px;\n//   cursor: pointer;\n//   margin-top: 10px;\n// `;\n\n// const Text = styled.p`\n//   margin-top: 20px;\n//   font-size: 14px;\n//   color: #666;\n// `;\n\n// const LoginLink = styled(Link)`\n//   color: #007bff;\n//   text-decoration: none;\n//   &:hover {\n//     text-decoration: underline;\n//   }\n// `;\n\n// const RegisterPage = () => {\n\n//   //logic section\n\n//   //make a useState for 5 fields\n//   const [name, setName] = useState('')\n//   const [email, setEmail] = useState('')\n//   const [phone, setPhone] = useState('')\n//   const [password, setPassword] = useState('')\n//   const [confirmPassword, setConfirmPassword] = useState('')\n\n//   //use state for error message\n//   const [nameError, setNameError] = useState('')\n//   const [emailError, setEmailError] = useState('')\n//   const [phoneError, setPhoneError] = useState('')\n//   const [passwordError, setPasswordError] = useState('')\n//   const [confirmPasswordError, setConfirmPasswordError] = useState('')\n\n//   const navigate = useNavigate()\n\n\n\n//   //validation\n//   var validate = () => {\n//     var isValid = true;\n\n//     //validate the firstName\n//     if (name.trim() === \"\") {\n//       setNameError(\"Name is required\")\n//       isValid = false;\n//     }\n\n//     if (email.trim() === '' || !email.includes('@')) {\n//       setEmailError(\"Email is required\")\n//       isValid = false;\n//     }\n\n//     if (phone.trim() === \"\") {\n//       setPasswordError(\"Phone is required\")\n//       isValid = false;\n//     }\n\n//     if (password.trim() === \"\") {\n//       setPasswordError(\"Password is required\")\n//       isValid = false;\n//     }\n\n//     if (confirmPassword.trim() === \"\") {\n//       setConfirmPasswordError(\"Confirm Password is required\")\n//       isValid = false;\n//     }\n\n//     if (confirmPassword.trim() !== password.trim()) {\n//       setConfirmPasswordError(\"Password and confirmation password don't match\")\n//       isValid = false;\n//     }\n//     return isValid;\n\n\n//   }\n\n//   //submit butoton function\n//   const handleSubmit = (e) => {\n//     e.preventDefault()\n\n//     //call the validator\n//     var isValidated = validate();\n//     if (!isValidated) {\n//       return\n//     }\n\n//     //register user Api \n\n//     //making json object\n//     const data = {\n//       \"name\": name,\n//       \"phone\": phone,\n//       \"email\": email,\n//       \"password\": password,\n//     }\n\n//     registerUserApi(data).then((res) => {\n\n//       //received data: success, message\n//       if (res.data.success === false) {\n//         toast.error(res.data.message)\n//       }\n//       else {\n//         toast.success(res.data.message)\n//         navigate('/login');\n\n//       }\n\n//     })\n\n\n\n//   }\n\n//   return (\n//     <Container>\n//       <RegisterFormWrapper>\n//         <ImageWrapper>\n//           <Image src=\"/assets/images/register_image.png\" alt=\"Register\" />\n//         </ImageWrapper>\n//         <RegisterForm>\n//           <Title>Register To Job Mate</Title>\n//           <Input\n//             type=\"text\"\n//             placeholder=\"Name\"\n//             className=\"form-control\"\n//             onChange={(e) => setName(e.target.value)}\n//           />\n//           {\n//             nameError && <p className='text-danger'>{nameError}</p>\n//           }\n//           <Input\n//             type=\"text\"\n//             placeholder=\"Email Address\"\n//             className=\"form-control\"\n//             onChange={(e) => setEmail(e.target.value)}\n//           />\n//           {\n//             emailError && <p className='text-danger'>{emailError}</p>\n//           }\n//           <Input\n//             type=\"text\"\n//             placeholder=\"Phone number\"\n//             className=\"form-control\"\n//             onChange={(e) => setPhone(e.target.value)}\n//           />\n//           {\n//             phoneError && <p className='text-danger'>{phoneError}</p>\n//           }\n//           <Input\n//             type=\"text\"\n//             placeholder=\"Password\"\n//             lassName=\"form-control\"\n//             onChange={(e) => setPassword(e.target.value)}\n//           />\n//           {\n//             passwordError && <p className='text-danger'>{passwordError}</p>\n//           }\n//           <Input\n//             type=\"text\"\n//             placeholder=\"Confirm Password\"\n//             className=\"form-control\"\n//             onChange={(e) => setConfirmPassword(e.target.value)}\n//           />\n//           {\n//             confirmPasswordError && <p className='text-danger'>{confirmPasswordError}</p>\n//           }\n//           <Button onClick={handleSubmit}>Register</Button>\n//           <Text>\n//             Already Have An Account? <LoginLink to=\"/login\">Login here</LoginLink>\n//           </Text>\n//         </RegisterForm>\n//       </RegisterFormWrapper>\n//     </Container>\n//   );\n// };\n\n// export default RegisterPage;\n\n"],"mappings":";;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAIA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}