{"ast":null,"code":"import { Base } from './Base.js';\nimport * as utils from './utils.js';\nexport class Reserved extends Base {\n  constructor(type) {\n    let count = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n    super();\n    this.type = type;\n    this.count = count;\n  }\n  decode(stream, parent) {\n    stream.pos += this.size(null, parent);\n    return undefined;\n  }\n  size(data, parent) {\n    const count = utils.resolveLength(this.count, null, parent);\n    return this.type.size() * count;\n  }\n  encode(stream, val, parent) {\n    return stream.fill(0, this.size(val, parent));\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}