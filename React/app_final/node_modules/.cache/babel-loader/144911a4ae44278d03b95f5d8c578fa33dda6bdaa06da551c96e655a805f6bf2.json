{"ast":null,"code":"import { Base } from './Base.js';\nexport class Bitfield extends Base {\n  constructor(type) {\n    let flags = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    super();\n    this.type = type;\n    this.flags = flags;\n  }\n  decode(stream) {\n    const val = this.type.decode(stream);\n    const res = {};\n    for (let i = 0; i < this.flags.length; i++) {\n      const flag = this.flags[i];\n      if (flag != null) {\n        res[flag] = !!(val & 1 << i);\n      }\n    }\n    return res;\n  }\n  size() {\n    return this.type.size();\n  }\n  encode(stream, keys) {\n    let val = 0;\n    for (let i = 0; i < this.flags.length; i++) {\n      const flag = this.flags[i];\n      if (flag != null) {\n        if (keys[flag]) {\n          val |= 1 << i;\n        }\n      }\n    }\n    return this.type.encode(stream, val);\n  }\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}