{"ast":null,"code":"var _jsxFileName = \"/Users/ayush/Desktop/Developer/React/app_final/src/pages/register/Register.jsx\",\n  _s = $RefreshSig$();\n// import React, { useState } from 'react'\n// import { toast } from 'react-toastify'\n// import { registerUserApi } from '../../apis/Api'\n\n// const Register = () => {\n\n//     //logic section\n\n//     //make a useState for 5 fields\n//     const [name, setName] = useState('')\n//     const [email, setEmail] = useState('')\n//     const [password, setPassword] = useState('')\n//     const [confirmPassword, setConfirmPassword] = useState('')\n\n//     //use state for error message\n//     const [nameError, setNameError] = useState('')\n//     const [emailError, setEmailError] = useState('')\n//     const [passwordError, setPasswordError] = useState('')\n//     const [confirmPasswordError, setConfirmPasswordError] = useState('')\n\n//     //Make a each function for changing the value \n//     const handleName = (e) => {\n//         setName(e.target.value);\n//     }\n\n//     const handleEmail = (e) => {\n//         setEmail(e.target.value);\n//     }\n\n//     const handlePassword = (e) => {\n//         setPassword(e.target.value);\n//     }\n\n//     const handleConfirmPassword = (e) => {\n//         setConfirmPassword(e.target.value);\n//     }\n\n//     //validation\n//     var validate = () => {\n//         var isValid = true;\n\n//         //validate the firstName\n//         if (name.trim() === \"\") {\n//             setNameError(\"Name is required\")\n//             isValid = false;\n//         }\n\n//         if (email.trim() === \"\") {\n//             setEmailError(\"Email is required\")\n//             isValid = false;\n//         }\n\n//         if (password.trim() === \"\") {\n//             setPasswordError(\"Password is required\")\n//             isValid = false;\n//         }\n\n//         if (confirmPassword.trim() === \"\") {\n//             setConfirmPasswordError(\"Confirm Password is required\")\n//             isValid = false;\n//         }\n\n//         if (confirmPassword.trim() !== password.trim()) {\n//             setConfirmPasswordError(\"Password and confirmation password don't match\")\n//             isValid = false;\n//         }\n//         return isValid;\n\n//     }\n\n//     //submit butoton function\n//     const handleSubmit = (e) => {\n//         e.preventDefault()\n\n//         //call the validator\n//         var isValidated = validate();\n//         if (!isValidated) {\n//             return\n//         }\n\n//         //register user Api \n\n//         //making json object\n//         const data = {\n//             \"name\": name,\n//             \"email\": email,\n//             \"password\": password,\n//         }\n\n//         registerUserApi(data).then((res) => {\n\n//             //received data: success, message\n//             if (res.data.success === false) {\n//                 toast.error(res.data.message)\n//             }\n//             else {\n//                 toast.success(res.data.message)\n//             }\n//             console.log(res.data)\n//         })\n\n//         console.log(name, email, password, confirmPassword)\n//     }\n\n//     return (\n//         <>\n//             <div className='container'>\n//                 <h1>\n//                     Create An Account\n//                 </h1>\n//                 <form className='w-50'>\n//                     <label className='mt-4'>\n//                         Name: {name}\n//                     </label>\n//                     <input onChange={handleName} type='text' className='form-control mt' placeholder='Enter your name'>\n//                     </input>\n\n//                     {\n//                         nameError && <p className='text-danger'>{nameError}</p>\n//                     }\n\n//                     <label className='mt-4'>\n//                         Email: {email}\n//                     </label>\n//                     <input onChange={handleEmail} type='text' className='form-control' placeholder='Enter your email'>\n//                     </input>\n//                     {\n//                         emailError && <p className='text-danger'>{emailError}</p>\n//                     }\n\n//                     <label className='mt-4'>\n//                         Password: {password}\n//                     </label>\n//                     <input onChange={handlePassword} type='text' className='form-control' placeholder='Enter your password'>\n//                     </input>\n//                     {\n//                         passwordError && <p className='text-danger'>{passwordError}</p>\n//                     }\n\n//                     <label className='mt-4'>\n//                         Confirm password: {confirmPassword}\n//                     </label>\n//                     <input onChange={handleConfirmPassword} type='text' className='form-control mb-4' placeholder='Confirm your password'>\n//                     </input>\n//                     {\n//                         confirmPasswordError && <p className='text-danger'>{confirmPasswordError}</p>\n//                     }\n\n//                     <button onClick={handleSubmit} className='btn btn-dark'> Create an account</button>\n\n//                 </form>\n//             </div>\n//         </>\n//     )\n// }\n\n// export default Register\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport styled from 'styled-components';\nimport { registerUserApi } from '../../apis/Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #fff;\n`;\n_c = Container;\nconst RegisterFormWrapper = styled.div`\n  display: flex;\n  background: #fff;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n`;\n_c2 = RegisterFormWrapper;\nconst ImageWrapper = styled.div`\n  display: none;\n  @media (min-width: 768px) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #1CB173;\n    border-top-left-radius: 10px;\n    border-bottom-left-radius: 10px;\n  }\n`;\n_c3 = ImageWrapper;\nconst RegisterForm = styled.div`\n  width: 350px;\n  padding: 40px;\n  text-align: center;\n`;\n_c4 = RegisterForm;\nconst Image = styled.img`\n  width: 300px;\n  border-top-left-radius: 10px;\n  border-bottom-left-radius: 10px;\n`;\n_c5 = Image;\nconst Title = styled.h2`\n  margin-bottom: 20px;\n  font-size: 24px;\n  color: #333;\n`;\n_c6 = Title;\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin: 10px 0;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 16px;\n`;\n_c7 = Input;\nconst Button = styled.button`\n  width: 100%;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #108A00;\n  color: white;\n  font-size: 16px;\n  cursor: pointer;\n  margin-top: 10px;\n`;\n_c8 = Button;\nconst Text = styled.p`\n  margin-top: 20px;\n  font-size: 14px;\n  color: #666;\n`;\n_c9 = Text;\nconst LoginLink = styled(Link)`\n  color: #007bff;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n_c10 = LoginLink;\nconst RegisterPage = () => {\n  _s();\n  //logic section\n\n  //make a useState for 5 fields\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [confirmPassword, setConfirmPassword] = useState('');\n\n  //use state for error message\n  const [nameError, setNameError] = useState('');\n  const [emailError, setEmailError] = useState('');\n  const [passwordError, setPasswordError] = useState('');\n  const [confirmPasswordError, setConfirmPasswordError] = useState('');\n\n  //Make a each function for changing the value \n  const handleName = e => {\n    setName(e.target.value);\n  };\n  const handleEmail = e => {\n    setEmail(e.target.value);\n  };\n  const handlePassword = e => {\n    setPassword(e.target.value);\n  };\n  const handleConfirmPassword = e => {\n    setConfirmPassword(e.target.value);\n  };\n\n  //validation\n  var validate = () => {\n    var isValid = true;\n\n    //validate the firstName\n    if (name.trim() === \"\") {\n      setNameError(\"Name is required\");\n      isValid = false;\n    }\n    if (email.trim() === \"\") {\n      setEmailError(\"Email is required\");\n      isValid = false;\n    }\n    if (password.trim() === \"\") {\n      setPasswordError(\"Password is required\");\n      isValid = false;\n    }\n    if (confirmPassword.trim() === \"\") {\n      setConfirmPasswordError(\"Confirm Password is required\");\n      isValid = false;\n    }\n    if (confirmPassword.trim() !== password.trim()) {\n      setConfirmPasswordError(\"Password and confirmation password don't match\");\n      isValid = false;\n    }\n    return isValid;\n  };\n\n  //submit butoton function\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    //call the validator\n    var isValidated = validate();\n    if (!isValidated) {\n      return;\n    }\n\n    //register user Api \n\n    //making json object\n    const data = {\n      \"name\": name,\n      \"email\": email,\n      \"password\": password\n    };\n    registerUserApi(data).then(res => {\n      //received data: success, message\n      if (res.data.success === false) {\n        toast.error(res.data.message);\n      } else {\n        toast.success(res.data.message);\n      }\n      console.log(res.data);\n    });\n    console.log(name, email, password, confirmPassword);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(RegisterFormWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(ImageWrapper, {\n        children: /*#__PURE__*/_jsxDEV(Image, {\n          src: \"/assets/images/login_image.png\",\n          alt: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 362,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(RegisterForm, {\n        children: [/*#__PURE__*/_jsxDEV(Title, {\n          children: \"Register To Job Mate\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"text\",\n          placeholder: \"Name\",\n          className: \"form-control\",\n          onChange: e => setName(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this), nameError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: nameError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 26\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          placeholder: \"Email Address\",\n          className: \"form-control\",\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 375,\n          columnNumber: 11\n        }, this), emailError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-danger\",\n          children: emailError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 27\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          placeholder: \"Password\",\n          lassName: \"form-control\",\n          onChange: e => setPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          placeholder: \"Confirm Password\",\n          className: \"form-control\",\n          onChange: e => setConfirmPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 390,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleSubmit,\n          children: \"Register\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 396,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Text, {\n          children: [\"Already Have An Account? \", /*#__PURE__*/_jsxDEV(LoginLink, {\n            to: \"/login\",\n            children: \"Login here\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 359,\n    columnNumber: 5\n  }, this);\n};\n_s(RegisterPage, \"2VKXLQybH1r4wXeZ6ilyun2y4PQ=\");\n_c11 = RegisterPage;\nexport default RegisterPage;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10, _c11;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"RegisterFormWrapper\");\n$RefreshReg$(_c3, \"ImageWrapper\");\n$RefreshReg$(_c4, \"RegisterForm\");\n$RefreshReg$(_c5, \"Image\");\n$RefreshReg$(_c6, \"Title\");\n$RefreshReg$(_c7, \"Input\");\n$RefreshReg$(_c8, \"Button\");\n$RefreshReg$(_c9, \"Text\");\n$RefreshReg$(_c10, \"LoginLink\");\n$RefreshReg$(_c11, \"RegisterPage\");","map":{"version":3,"names":["React","useState","Link","toast","styled","registerUserApi","jsxDEV","_jsxDEV","Container","div","_c","RegisterFormWrapper","_c2","ImageWrapper","_c3","RegisterForm","_c4","Image","img","_c5","Title","h2","_c6","Input","input","_c7","Button","button","_c8","Text","p","_c9","LoginLink","_c10","RegisterPage","_s","name","setName","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","nameError","setNameError","emailError","setEmailError","passwordError","setPasswordError","confirmPasswordError","setConfirmPasswordError","handleName","e","target","value","handleEmail","handlePassword","handleConfirmPassword","validate","isValid","trim","handleSubmit","preventDefault","isValidated","data","then","res","success","error","message","console","log","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","className","onChange","lassName","onClick","to","_c11","$RefreshReg$"],"sources":["/Users/ayush/Desktop/Developer/React/app_final/src/pages/register/Register.jsx"],"sourcesContent":["// import React, { useState } from 'react'\n// import { toast } from 'react-toastify'\n// import { registerUserApi } from '../../apis/Api'\n\n// const Register = () => {\n\n//     //logic section\n\n//     //make a useState for 5 fields\n//     const [name, setName] = useState('')\n//     const [email, setEmail] = useState('')\n//     const [password, setPassword] = useState('')\n//     const [confirmPassword, setConfirmPassword] = useState('')\n\n//     //use state for error message\n//     const [nameError, setNameError] = useState('')\n//     const [emailError, setEmailError] = useState('')\n//     const [passwordError, setPasswordError] = useState('')\n//     const [confirmPasswordError, setConfirmPasswordError] = useState('')\n\n//     //Make a each function for changing the value \n//     const handleName = (e) => {\n//         setName(e.target.value);\n//     }\n\n//     const handleEmail = (e) => {\n//         setEmail(e.target.value);\n//     }\n\n//     const handlePassword = (e) => {\n//         setPassword(e.target.value);\n//     }\n\n//     const handleConfirmPassword = (e) => {\n//         setConfirmPassword(e.target.value);\n//     }\n\n\n\n//     //validation\n//     var validate = () => {\n//         var isValid = true;\n\n//         //validate the firstName\n//         if (name.trim() === \"\") {\n//             setNameError(\"Name is required\")\n//             isValid = false;\n//         }\n\n//         if (email.trim() === \"\") {\n//             setEmailError(\"Email is required\")\n//             isValid = false;\n//         }\n\n//         if (password.trim() === \"\") {\n//             setPasswordError(\"Password is required\")\n//             isValid = false;\n//         }\n\n//         if (confirmPassword.trim() === \"\") {\n//             setConfirmPasswordError(\"Confirm Password is required\")\n//             isValid = false;\n//         }\n\n//         if (confirmPassword.trim() !== password.trim()) {\n//             setConfirmPasswordError(\"Password and confirmation password don't match\")\n//             isValid = false;\n//         }\n//         return isValid;\n\n\n//     }\n\n//     //submit butoton function\n//     const handleSubmit = (e) => {\n//         e.preventDefault()\n\n//         //call the validator\n//         var isValidated = validate();\n//         if (!isValidated) {\n//             return\n//         }\n\n//         //register user Api \n\n//         //making json object\n//         const data = {\n//             \"name\": name,\n//             \"email\": email,\n//             \"password\": password,\n//         }\n\n//         registerUserApi(data).then((res) => {\n\n//             //received data: success, message\n//             if (res.data.success === false) {\n//                 toast.error(res.data.message)\n//             }\n//             else {\n//                 toast.success(res.data.message)\n//             }\n//             console.log(res.data)\n//         })\n\n\n//         console.log(name, email, password, confirmPassword)\n//     }\n\n//     return (\n//         <>\n//             <div className='container'>\n//                 <h1>\n//                     Create An Account\n//                 </h1>\n//                 <form className='w-50'>\n//                     <label className='mt-4'>\n//                         Name: {name}\n//                     </label>\n//                     <input onChange={handleName} type='text' className='form-control mt' placeholder='Enter your name'>\n//                     </input>\n\n//                     {\n//                         nameError && <p className='text-danger'>{nameError}</p>\n//                     }\n\n//                     <label className='mt-4'>\n//                         Email: {email}\n//                     </label>\n//                     <input onChange={handleEmail} type='text' className='form-control' placeholder='Enter your email'>\n//                     </input>\n//                     {\n//                         emailError && <p className='text-danger'>{emailError}</p>\n//                     }\n\n//                     <label className='mt-4'>\n//                         Password: {password}\n//                     </label>\n//                     <input onChange={handlePassword} type='text' className='form-control' placeholder='Enter your password'>\n//                     </input>\n//                     {\n//                         passwordError && <p className='text-danger'>{passwordError}</p>\n//                     }\n\n//                     <label className='mt-4'>\n//                         Confirm password: {confirmPassword}\n//                     </label>\n//                     <input onChange={handleConfirmPassword} type='text' className='form-control mb-4' placeholder='Confirm your password'>\n//                     </input>\n//                     {\n//                         confirmPasswordError && <p className='text-danger'>{confirmPasswordError}</p>\n//                     }\n\n\n//                     <button onClick={handleSubmit} className='btn btn-dark'> Create an account</button>\n\n\n\n//                 </form>\n//             </div>\n//         </>\n//     )\n// }\n\n// export default Register\n\n\n\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { toast } from 'react-toastify';\nimport styled from 'styled-components';\nimport { registerUserApi } from '../../apis/Api';\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 100vh;\n  background-color: #fff;\n`;\n\nconst RegisterFormWrapper = styled.div`\n  display: flex;\n  background: #fff;\n  border-radius: 10px;\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);\n`;\n\nconst ImageWrapper = styled.div`\n  display: none;\n  @media (min-width: 768px) {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    background-color: #1CB173;\n    border-top-left-radius: 10px;\n    border-bottom-left-radius: 10px;\n  }\n`;\n\nconst RegisterForm = styled.div`\n  width: 350px;\n  padding: 40px;\n  text-align: center;\n`;\n\nconst Image = styled.img`\n  width: 300px;\n  border-top-left-radius: 10px;\n  border-bottom-left-radius: 10px;\n`;\n\nconst Title = styled.h2`\n  margin-bottom: 20px;\n  font-size: 24px;\n  color: #333;\n`;\n\nconst Input = styled.input`\n  width: 100%;\n  padding: 10px;\n  margin: 10px 0;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  font-size: 16px;\n`;\n\nconst Button = styled.button`\n  width: 100%;\n  padding: 10px;\n  border: none;\n  border-radius: 5px;\n  background-color: #108A00;\n  color: white;\n  font-size: 16px;\n  cursor: pointer;\n  margin-top: 10px;\n`;\n\nconst Text = styled.p`\n  margin-top: 20px;\n  font-size: 14px;\n  color: #666;\n`;\n\nconst LoginLink = styled(Link)`\n  color: #007bff;\n  text-decoration: none;\n  &:hover {\n    text-decoration: underline;\n  }\n`;\n\nconst RegisterPage = () => {\n\n  //logic section\n\n  //make a useState for 5 fields\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [password, setPassword] = useState('')\n  const [confirmPassword, setConfirmPassword] = useState('')\n\n  //use state for error message\n  const [nameError, setNameError] = useState('')\n  const [emailError, setEmailError] = useState('')\n  const [passwordError, setPasswordError] = useState('')\n  const [confirmPasswordError, setConfirmPasswordError] = useState('')\n\n  //Make a each function for changing the value \n  const handleName = (e) => {\n    setName(e.target.value);\n  }\n\n  const handleEmail = (e) => {\n    setEmail(e.target.value);\n  }\n\n  const handlePassword = (e) => {\n    setPassword(e.target.value);\n  }\n\n  const handleConfirmPassword = (e) => {\n    setConfirmPassword(e.target.value);\n  }\n\n\n\n  //validation\n  var validate = () => {\n    var isValid = true;\n\n    //validate the firstName\n    if (name.trim() === \"\") {\n      setNameError(\"Name is required\")\n      isValid = false;\n    }\n\n    if (email.trim() === \"\") {\n      setEmailError(\"Email is required\")\n      isValid = false;\n    }\n\n    if (password.trim() === \"\") {\n      setPasswordError(\"Password is required\")\n      isValid = false;\n    }\n\n    if (confirmPassword.trim() === \"\") {\n      setConfirmPasswordError(\"Confirm Password is required\")\n      isValid = false;\n    }\n\n    if (confirmPassword.trim() !== password.trim()) {\n      setConfirmPasswordError(\"Password and confirmation password don't match\")\n      isValid = false;\n    }\n    return isValid;\n\n\n  }\n\n  //submit butoton function\n  const handleSubmit = (e) => {\n    e.preventDefault()\n\n    //call the validator\n    var isValidated = validate();\n    if (!isValidated) {\n      return\n    }\n\n    //register user Api \n\n    //making json object\n    const data = {\n      \"name\": name,\n      \"email\": email,\n      \"password\": password,\n    }\n\n    registerUserApi(data).then((res) => {\n\n      //received data: success, message\n      if (res.data.success === false) {\n        toast.error(res.data.message)\n      }\n      else {\n        toast.success(res.data.message)\n      }\n      console.log(res.data)\n    })\n\n\n    console.log(name, email, password, confirmPassword)\n  }\n\n  return (\n    <Container>\n      <RegisterFormWrapper>\n        <ImageWrapper>\n          <Image src=\"/assets/images/login_image.png\" alt=\"Register\" />\n        </ImageWrapper>\n        <RegisterForm>\n          <Title>Register To Job Mate</Title>\n          <Input\n            type=\"text\"\n            placeholder=\"Name\"\n            className=\"form-control\"\n            onChange={(e) => setName(e.target.value)}\n          />\n          {\n            nameError && <p className='text-danger'>{nameError}</p>\n          }\n          <Input\n            type=\"email\"\n            placeholder=\"Email Address\"\n            className=\"form-control\"\n            onChange={(e) => setEmail(e.target.value)}\n          />\n          {\n            emailError && <p className='text-danger'>{emailError}</p>\n          }\n          <Input\n            type=\"password\"\n            placeholder=\"Password\"\n            lassName=\"form-control\"\n            onChange={(e) => setPassword(e.target.value)}\n          />\n          <Input\n            type=\"password\"\n            placeholder=\"Confirm Password\"\n            className=\"form-control\"\n            onChange={(e) => setConfirmPassword(e.target.value)}\n          />\n          <Button onClick={handleSubmit}>Register</Button>\n          <Text>\n            Already Have An Account? <LoginLink to=\"/login\">Login here</LoginLink>\n          </Text>\n        </RegisterForm>\n      </RegisterFormWrapper>\n    </Container>\n  );\n};\n\nexport default RegisterPage;\n"],"mappings":";;AAAA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;;AAIA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,OAAOC,MAAM,MAAM,mBAAmB;AACtC,SAASC,eAAe,QAAQ,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,SAAS,GAAGJ,MAAM,CAACK,GAAG;AAC5B;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GANIF,SAAS;AAQf,MAAMG,mBAAmB,GAAGP,MAAM,CAACK,GAAG;AACtC;AACA;AACA;AACA;AACA,CAAC;AAACG,GAAA,GALID,mBAAmB;AAOzB,MAAME,YAAY,GAAGT,MAAM,CAACK,GAAG;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACK,GAAA,GAVID,YAAY;AAYlB,MAAME,YAAY,GAAGX,MAAM,CAACK,GAAG;AAC/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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}